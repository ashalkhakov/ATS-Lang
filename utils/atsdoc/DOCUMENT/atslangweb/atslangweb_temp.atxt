%{
//
staload STDIO = "libc/SATS/stdio.sats"

(* ****** ****** *)

#define ISTEMP 1

(* ****** ****** *)
//
#include "atslangwebatxt.dats"
//
(* ****** ****** *)
//
#include "atslangweb_layout.dats"
//
(* ****** ****** *)
//
val theCSSfilr = $STDIO.fopen_ref_exn
  ("styles/atslangweb_temp.css", file_mode_w)
val () = fprint_webox_css_all (theCSSfilr, theBodyProp)
//
fun addcssrule
  (rule: string): text = let
  val () = fprint_string (theCSSfilr, rule) in TEXTnil ()
end // end of [addcssrule]
fun addcssrule_strsub
  (rule: string): text = let
  val () = fprint_strsub (theCSSfilr, rule) in TEXTnil ()
end // end of [addcssrule_strsub]

(* ****** ****** *)

%}

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
   "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">

<HEAD>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<TITLE>The ATS Programming Language</TITLE>
<link rel="stylesheet" type="text/css" href="\#theStyleSheetLink$" />
</HEAD><!--head-->

#comment("****** ****** *")

#addcssrule("\
body {
}
\#body-layout {
background-color: \#E7CF9E; /* golden brown */\n\
margin: 0px ;
}
")

#addcssrule_strsub("
\\\#theBodyProp {
background-color: \\\#346090;
background-image: url(#ATSLANGWEBROOTget()/images/theSidebar_bgimage.png);
background-position: left;
background-repeat: repeat-y;
width: 100% ;
margin-top: 0px;
}
")

%{
(*
#ignoretxt(
#strsub[theStyleSheetLink]("#ATSLANGWEBROOTget()/styles/atslangweb_temp.css")
)
*)
%}

#addcssrule("
\#theSidebar {
}
\#theSidebar-prop {
color: \#E0E0E0 ;
padding-top: 75px ;
padding-left: 15px ;
}
\#theSidebar-prop a {
color: \#E0E0E0 ;
}
")

#ignoretxt(
#strsub[theSidebar]('\
<div id="theSidebar-prop">
<TABLE BORDER=0 CELLSPACING=0 CELLPADDING=2>
  <TR><TD>\#ATSLANGWEBHOME$(<a href="http://www.ats-lang.org/ATS.html">old</a>)</TD></TR>
  <TR><TD>\#ATSLANGWEBDOWNLOAD$</TD></TR>
  <TR><TD>\#ATSLANGWEBDOCUMENT$</TD></TR>
  <TR><TD>\#ATSLANGWEBLIBRARY$</TD></TR>
  <TR><TD>\#ATSLANGWEBRESOURCE$</TD></TR>
  <TR><TD>\#ATSLANGWEBEXAMPLE$</TD></TR>
  <TR><TD>\#ATSLANGWEBIMPLEMENT</TD></TR>
  <TR><TD>\#ATSLANGWEBPAPER</TD></TR>
  <TR><TD><A HREF="https://lists.sourceforge.net/lists/listinfo/ats-lang-users">Mailing List</A></TD></TR>
</TABLE>
</div>
'))

#addcssrule_strsub("
\\\#thePage {
}
\\\#thePageHeaderTitle {
background: white ;
background-image: url(#ATSLANGWEBROOTget()/images/thePageHeader_bgimage.png);
text-align: center ;
}
\\\#thePageHeaderMainTitle {
font-size: 250% ;
padding-top: 36px ;
padding-bottom: 4px ;
}
\\\#thePageHeaderByTitle {
font-size: 160% ;
padding-top: 0px ;
padding-bottom: 20px ;
}
")

#ignoretxt(
#strsub[thePageHeaderTitle]('\
<div id="thePageHeaderMainTitle">
<strong>The ATS Programming Language</strong>
</div>
<div id="thePageHeaderByTitle">
<strong>Unleashing the Potential of Types!</strong>
</div>
'))

#addcssrule("\
.Page-mysitelinks {
/*
background: \#7D0000 ;
*/
background: \#346090 ;
color: white ;
}
.Page-mysitelinks .separator { display: none; }

.Page-mysitelinks a,
.Page-mysitelinks strong {
color: white ;
padding-left: 6px ;
padding-right: 6px ;
}
")
%{
(*
#ignoretxt(
#strsub[thePageHeaderSeparator]("\
<div class="Page-mysitelinks">
#mysitelinks("HOME")
</div>
"))
*)
%}

#addcssrule("\
\#thePageBody {
background-color: white ;
background-image: url(http://www.cs.bu.edu/~hwxi/ATS3/images/thePageBody_bgimage.png);
}
")

%{
(*
#ignoretxt(
#strsub[thePageFooterSeparator]("\
<div class="Page-mysitelinks">
#mysitelinks("HOME")
</div>
"))
*)
%}

#addcssrule("\
\#thePageFooterRest {
background: white ;
padding-top: 6px ;
text-align: right ;
}
")
#ignoretxt(
#strsub[thePageFooterRest]('\
<a href="http://sourceforge.net">
<img src="http://sflogo.sourceforge.net/sflogo.php?group_id=205722&amp;type=2" width=120 height=36 border=0 alt="SourceForge.net Logo" />
</a>
'))

%{
local
in
//
fun theBodyText (): text = let
  val res = tostring_fprint<webox>
    ("atslangweb_body_content", fprint_webox_html, theBodyProp)
  val () = assert (strptr_isnot_null res)
  val res = string_of_strptr (res)
in
  TEXTstrsub (res)
end (* theBodyText *)
//
end // end of [local]
%}
<body id="body-layout">
#theBodyText()
</body>#comment("body")
</html>#comment("html")

%{
implement
main () = {
//
val () =  $STDIO.fclose_exn (theCSSfilr)
//
val () = fprint_filsub (stdout_ref, "atslangweb_temp_atxt.txt")
//
} // end of [main]
%}
