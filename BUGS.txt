
//
//
// bug reports as well as suggestions for fixes (that are not yet done)
//
//

------------------ begin of [BUGS.txt] ------------------

Wednesday, June 25, 2008 (HX)

STATUS: Fixed on September 28, 2008 (HX)

Note that the handling of [continue] in a for-loop was incorrectly
conceived. After [continue], [post] section needs to be evaluated first
before jumping to the beginning of the loop. This means that some functions
in [ats_trans3_loop.dats] need to be modified appropriately.

Please find some typical uses of [for] loops inn the following file:

EXAMPLE/SHOOTOUT/SUBMIT/spectral-norm2.dats

######

Thursay, September 25, 2008 (HX)

STATUS: Fixed on September 26, 2008 (HX)

\begin{code}
val x = darray (); val y = darray (); val z = darray ()
macdef xyz (i, _1, _2, _3) = (
  x[,(i)] := ,(_1); y[,(i)] := ,(_2); z[,(i)] := ,(_3)
)
val () = xyz (0, 0.0, 0.0, 0.0)
\end{code}

\begin{errmsg}
error(macro): the variable [i] is unbound.
\end{errmsg}

The error was caused by the function [eval1_dexp] in [ats_macro2.dats]
not handling the case [D2Earrsub].

######

Monday, September 29, 2008 (HX)

Status: Not yet tried to fix

The interaction between vbox and the effect [ref] is incorrect.

######

Tuesday, October 7, 2008 (HX)

Status: Fixed on October 7, 2008 (HX)

A template tail call does not translate into a jump. This is a serious
bug!

\begin{code}
val A = loop<String> (argc, 0, A) where {
  fun{a:t@ype} loop {n,i:nat | i <= n}
    (n: int n, i: int i, A: farr (a, n-i)): farr (a, 0) = begin
    if i < n then begin
      loop (n, i+1, funarray_lorem A)
    end else A
  end // end of [loop]
} // end of [val]
\end{code}

The function [ccomp_tmpdef] in [ats_ccomp_trans_temp] did not push the
function lable into [the_tailcallst]. It is fixed now.

######

 ------------------ end of [BUGS.txt] -------------------
