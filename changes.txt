########################################################################

ats-lang-anairiats-0.2.2:

1. -D_ATS_TERMINATION_CHECK is changed to -D_ATS_PROOFCHECK; fixing a
   related bug in [d3explst_funarg_tr].
2. Fixing a bug involving type-checking variadic functions
3. Fixing a bug involving solving top-level constraints
4. $ATSHOME/libc/SATS/complex.sats and $ATSHOME/libc/DATS/complex.dats
   are compiled and then added to libats.a
5. Adding support for #undef
6. Thoroughly testing the support for ATS running on Cygwin
7. Implementing libats/vector (dynamically resizable vectors)
8. $ATSHOME may now contain the space character (' ').
9. Fixing a bug involving mishandling of proofs during proof erasure
   (ats_trans4)
10. Fixing a bug involving mishandling negative long integers
11. Adding rarray (reversed array) implementation
12. Adding libc/pwd, which correspond to pwd.h
13. Adding libc/grp, which correspond to grp.h
14. Adding libc/termios, which corresponds to termios.h
15. Adding libc/curses, which corresponds to curses.h
16. Adding libc/utime, which corresponds to utime.h
17. Adding libc/sys/statvfs, which corresponds to sys/statvfs.h
18. Adding libc/ctype, which corresponds to ctype
19. Adding libc/DATS/stdio.dats
20. Modifying the types for malloc_ngc and free_ngc
21. Clearing up libc/pthread and libc/pthread_uplock
22. Implementing lib/pthread_upbarr
23. Incorporating [parcomb] into $ATSHOME/contrib
24. Adding libc/sys/resource, which corresponds to sys/resource.h
25. Adding [assertloc] macdef
26: Adding libc/sys/socket_in and libc/sys/socket_un
27: Adding libc/netdb
28. Adding libc/sys/sockaddr and libc/sys/sockopt
29: Adding prelude/unsafe!!!
30: Adding prelude/ptrarr (* for arrays ending with a null ptr *)
31: SDL is no longer built automatically

########################################################################

ats-lang-anairiats-0.2.1:

1. The support for 'atsopt --depgen' is revamped.
2. The support for boolean patterns is made available.
3. Most string-generating functions now return linear strings
   (strptr). This is a change that can have pervasive impact.
4. Some support for GMP/MPQ and GMP/MPF functions are added. See
   libc/SATS/gmp.sat for details.
5. Overhauling the ATS building system (Yuri D'Elia).

########################################################################

ats-lang-anairiats-0.2.0:

This is a milestone release. The original plan for OOP support in ATS
has been scratched completely, resulting in about 1500 lines of code being
removed. Instead, some support is added to interface ATS with external
code written in OOP-style.

The following libraries are now available for use:

contrib/glib
contrib/cairo
contrib/pango
contrib/X11
contrib/GTK
contrib/GL (OpenGL, GLU and GLUT)
contrib/SDL

Much more effort is needed to expand the APIs for these libraries. So far,
only the APT for cairo is close to completion.

########################################################################

ats-lang-anairiats-0.1.9:

(*
// this feature is retracted as it is difficult to support
1. overloaded symbols in a macro definition is re-loaded when the macro
   definition is expanded. This change can greatly facilitate the use of
   macros defined in $ATSHOME/prelude/macrodef.sats

2. macro expansion is now handled by [d1exp_tr] in [ats_trans2_dyn1.dats]
   (instead of being done by [d2exp_tr] in [ats_trans3_dyn2.dats])
*)

3. The semantics for symbol overloading is greatly simplified.

4. Adding libc/sched based on /usr/include/sched.x

5. Adding libats/parworkshop to support multicore programming.

6. The examples in doc/EXAMPLE/MULTICORE are modified to run again.

7. Adding support for lliunt and ullint.

......

########################################################################

ats-lang-anairiats-0.1.8:

1. string generation functions have been modified to return linear strings
   that can be freed.

2. $extype_struct is introduced to interface with C structs

3. Fixing a serious mistake causing static unification variable to be
   wrongly tagged.

########################################################################

ats-lang-anairiats-0.1.7:

1. Adding support for implementing variadic functions in ATS.
   Please see the files: $ATSHOME/libc/?ATS/stdarg.?ats

2. Adding a check to detect looping caused by recursive staloading
   and/or including

3. Overhauling [prelude/SATS/array.sats]

4. Adding support for special constants $FILENAME and $LOCATION.

########################################################################

ats-lang-anairiats-0.1.6:

1. Support for OOP is under development. So far, typechecking is done.

2. Type error message reporting is made more informative. This is ongoing.

3. Adding $ATSHOME/ccomp/lib64 for storing libfiles for 64-bit machines.

4. Makefiles are re-designed by Likai Liu.

########################################################################

ats-lang-anariats-0.1.5:

1. A character whose ascii code is greater than 127 is treated as the null
   character by the ATS lexer. So any chars can now appear in comments.

2. Some location information is reported when a match failure occurs at
   run-time.

3. [atscc] now returns a nonzero exit status to the OS if compilation does
   not finish normally.

4. various list functions (e.g., list_map_* functions) now return linear
   lists instead of nonlinear ones.

5. Some packages in SML Basis Library are implemented in [libats/smlbas]

6. A bug is fixed that was due to nonlinear constructor patterns being
   given reference arguments.

7. The constant [div_int_int_int_bool] is re-defined as the previous
   definition was wrong if the divider and the dividee are of different
   signs.

8. A bug is fixed that was duo to [as] patterns being wrongly compiled.

9. [prelude/SATS/matrix0.sats] and [prelude/DATS/matrix0.dats] are added.

########################################################################

ats-lang-anariats-0.1.4:

1. [atscc] invokes a C compiler to compile the C code generated by the ATS
   compiler [atsopt]. If the C compiler to be used is not [gcc], please set
   the environment variable [ATSCCOMP] to the name of this C compiler.

########################################################################

ats-lang-anariats-0.1.3:

1. Various bug fixes. In particular, a bug causing incorrect compilation
   of pattern matching is fixed.

2. It is now possible to generate html files for cross-referencing. The
   flag for this feature is [--posmark_xref=XREF], where XREF should be
   replaced with the name of some directory (already created) to store
   the html files to be generated.

########################################################################

ats-lang-anariats-0.1.2:

1. Linear lazy evaluation is now supported. See [prelude/DATS/file.dats]
   for some code using this cool feature.

2. Many new tutorials have been added. There is also a all-in-one format
   that allows for easy printout.

3. Many examples from the book K&R are translated into the directory:
   [doc/EXAMPLE/KernighanRitchie].   

########################################################################

ats-lang-anariats-0.1.1:

1. A type [schar] for signed chars is added. Now, the type [char] depends
   on the interpretation of the C compiler used to compile the C code that
   is generated from ATS programs by [atsopt].

2. [scase] is now supported.

3. [x1,x2:int] <pat> is now a legal pattern; it is equivalent to the following
   pattern [x1:int,x2:int] <pat>

4. It is now allowed in ATS to allocate (linear) arrays on stack at run-time.

########################################################################

ats-lang-anariats-0.1.0:

1. The syntax for template implementation is changed:
   previous syntax: implement foo<a,b><c> (...) = ...
   current  syntax: implement{a,b}{c} foo (...) = ...

2. It is now allowed to implement a special template instantiation:
   implement foo<double,string><int> (...) = ...

3. Various bug fixes can be found in BUGS.txt.

########################################################################

ats-lang-anariats-0.0.2:

1. fixed a bug affecting [nonfix] declarations.

2. [ats_trans1.dats] is splitted into the following two:
   [ats_trans1_sat.dats] and [ats_trans1_dyn.dats]

3. Make/Install is significantly improved. There is no need to set
   ATSHOME (and ATSHOMERELOC) before 'make all' is executed.

4. The confusion between array and array0 is resolved.

5. [EXAMPLE/SHOOTOUT/SUMBIT] is created.

6. The function [intvec_normalize_gte] did not handle the case [gcd > 1]
   correctly. It is fixed now.

7. The incorrect handling of [continue] in a for loop is fixed now.  See
   [BUGS.txt]

8. The command [atspackage] no longer puts the source code for Anairiats
   into a distribution.

########################################################################
